#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

from app import app, db, User
import sys

def fix_admin_status():
    with app.app_context():
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã User
        print("=== –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã User ===")
        columns = [column.name for column in User.__table__.columns]
        print(f"–ö–æ–ª–æ–Ω–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ: {columns}")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users = User.query.all()
        print(f"\n=== –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ: {len(users)} ===")
        
        # –í—ã–≤–æ–¥–∏–º —Ç–µ–∫—É—â–∏–µ —Å—Ç–∞—Ç—É—Å—ã
        for user in users:
            try:
                print(f"ID: {user.id}, –ò–º—è: {user.username}, Email: {user.email}, –ê–¥–º–∏–Ω: {user.is_admin}")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ—Å—Ç—É–ø–µ –∫ –∞—Ç—Ä–∏–±—É—Ç–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username}: {e}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–æ–ª–æ–Ω–∫–∞ is_admin
        if 'is_admin' not in columns:
            print("\n‚ùå –û–®–ò–ë–ö–ê: –ö–æ–ª–æ–Ω–∫–∞ is_admin –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ User!")
            print("–î–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python add_admin_column.py")
            return
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 'admin'
        print("\n=== –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ ===")
        admin_count = 0
        for user in users:
            if user.username == 'admin':
                if not user.is_admin:
                    print(f"üëë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{user.username}' –ø–æ–ª—É—á–∞–µ—Ç –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
                    user.is_admin = True
                    admin_count += 1
                else:
                    print(f"‚úì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{user.username}' —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
            else:
                if user.is_admin:
                    print(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{user.username}' —Ç–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
                    user.is_admin = False
                    admin_count += 1
                else:
                    print(f"‚úì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{user.username}' —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –æ–±—ã—á–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è, –µ—Å–ª–∏ –±—ã–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        if admin_count > 0:
            db.session.commit()
            print(f"\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {admin_count}")
        else:
            print("\n‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è, –≤—Å–µ –ø—Ä–∞–≤–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")

# –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–ª–æ–Ω–∫–∏ is_admin, –µ—Å–ª–∏ –µ–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
def create_admin_column_script():
    with open('add_admin_column.py', 'w') as f:
        f.write("""#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from app import app, db

with app.app_context():
    db.engine.execute('ALTER TABLE user ADD COLUMN is_admin BOOLEAN DEFAULT 0')
    print("–ö–æ–ª–æ–Ω–∫–∞ is_admin —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü—É user")
""")
    print("\n–°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª add_admin_column.py –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–ª–æ–Ω–∫–∏ is_admin")

if __name__ == "__main__":
    fix_admin_status()
    create_admin_column_script() 